version: 2
jobs:
  build:
    branches:
      only:
        - circleci
        - master
        - production
        - new

    working_directory: ~/rbc
    docker:
      - image: circleci/python:3.6.4
        environment:
          PIPENV_VENV_IN_PROJECT: true
    steps:
      - checkout
      - run:
          name: Update apt and install Ansible and pipenv
          command: |
            sudo apt-get update
            sudo apt-get install ansible
            sudo pip install pipenv
            pipenv install
      - run: 
          name: Change ownership to circleci user
          command: |
            sudo chown -R circleci:circleci /usr/local/bin
            sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages
      - restore_cache:
          keys: v1-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: install dependencies
          command: |
            sudo pip install pipenv
            pipenv install
      - save_cache:
          key: v1-dependencies-{{ checksum "requirements.txt" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.6/site-packages"

#       Download and cache dependencies
      - run:
          name: Simulate Django Migrations and Unit test
          command: |
           
            pipenv run python manage.py migrate
            pipenv run python manage.py test

      - store_test_result:
        path: test-reports

      - store_artifacts:
          path: test-reports
          destination: tr1
#            
      - run:
        name: Merge master branch to prod
          command: |
            if [ "$CIRCLE_BRANCH" == "master" ];
            then
            git config user.email "rbchall.official@gmail.com" ;
            git config user.name "rbchall" ;
            git checkout production ;
            git rebase master ;
            git push origin production ; 
            fi
      - run:
          name: Deploy to production if branch production
          command: |
            if [ "$CIRCLE_BRANCH" == "production" ];
            then
#              cd deploy ;
#              ansible -i hosts  prod -m ping  -u ubuntu ;
#              ansible-playbook -i hosts  deploy.yml -u ubuntu  ;
                sudo service supervisor restart 
            fi
